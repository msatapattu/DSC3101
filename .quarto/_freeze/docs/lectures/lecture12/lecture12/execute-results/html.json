{
  "hash": "1dd68a3e41c6ad948ff082a18d710f1c",
  "result": {
    "markdown": "---\ntitle: DSC 3091- Advanced Statistics Applications I\nsubtitle: \"Statistical quality control\"\nauthor: \"\"\ninstitute: Department of Statistics and Computer Science \nformat: \n  revealjs:\n      large: true\n      theme: [beige, custom.scss]\n      slide-number: true\n      chalkboard: \n        theme: whiteboard\n      \neditor: visual\n---\n\n\n# Introduction {.smaller}\n\n-   Quality is the degree to which products or services meet the needs of customers.\n\n-   Common goals for quality professionals include reducing defect rates, manufacturing products within specifications, and standardizing delivery time.\n\n-   Advantages of quality control\n\n    -   Reduction in production/inspection cost\n\n    -   Prior fault detection\n\n    -   Satisfaction of consumers\n\n    -   Effective utilisation of resources\n\n------------------------------------------------------------------------\n\n-   The process of using statistical tools and techniques to monitor and manage product quality across various industries.\n\n-   Can be conducted as\n\n    ::: columns\n    ::: {.column width=\"50%\"}\n    -   ::: columns\n        A part of production process,\n        :::\n\n    -   A part of last-minute quality control check\n\n    -   A part of eventual check by quality control department\n    :::\n\n    ::: {.column width=\"50%\"}\n    ![](images/quality-control.jpg)\n    :::\n    :::\n\n# Methods of Quality Control\n\n-   Cause and effect diagrams\n-   Control charts\n-   Check sheet\n-   Histograms\n-   Pareto charts\n-   Scatter diagrams\n-   Stratification\n\n------------------------------------------------------------------------\n\n## Cause and effect diagrams\n\n-   is a visualization tool for categorizing the potential causes of a problem.\n\n-   It can also be useful for showing relationships between contributing factors.\n\n    ![](images/causeandeffect.jpg)\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(qcc)\ncause.and.effect(cause=list(Measurements=c(\"Micrometers\", \"Microscopes\", \"Inspectors\"),\n                            Materials=c(\"Alloys\", \"Lubricants\", \"Suppliers\"),\n                            Personnel=c(\"Shifts\", \"Supervisors\", \"Training\", \"Operators\"),\n                            Environment=c(\"Condensation\", \"Moisture\"),\n                            Methods=c(\"Brake\", \"Engager\", \"Angle\"),\n                            Machines=c(\"Speed\", \"Lathes\", \"Bits\", \"Sockets\")),\n                 effect=\"Surface Flaws\")\n```\n\n::: {.cell-output-display}\n![](lecture12_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Control Charts\n\n-   Unusual patterns in your data indicate the presence of special-cause variation.\n\n-   Use control charts to detect special-cause variation and to assess process stability over time.\n\n-   The center line is the average value of the quality statistic that you choose to assess.\n\n-   If a process is in control, the points will vary randomly around the center line.\n\n------------------------------------------------------------------------\n\n::: columns\n::: {.column width=\"50%\"}\n-   The control limits are calculated based on the expected random variation in the process.\n-   The upper control limit (UCL) is 3 standard deviations above the center line.\n:::\n\n::: {.column width=\"50%\"}\n![](images/xbar.png)\n:::\n:::\n\n-   The lower control limit (LCL) is 3 standard deviations below the center line.\n\n-   If a process is in control, all points on the control chart are between the upper and lower control limits.\n\n------------------------------------------------------------------------\n\n## Chart Selection\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-9f9615b849c7e52cfb6a\" style=\"width:1000px;height:650px;\" class=\"DiagrammeR html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9f9615b849c7e52cfb6a\">{\"x\":{\"diagram\":\"graph TB\\n    A(Select Control Chart)-->B{data type}\\n    style A size:300, font-size:150px\\n    B --> |Discrete| C{Distribution}\\n    B --> |Continuous| D{Sample Size}\\n    C --> |Poisson| E{Sample Size}\\n    C --> |Binominal| F{Frequency}\\n    E --> |constant| G[c-chart]\\n    E --> |variable| H[u-chart]\\n    F --> |count| I[np-chart]\\n    F --> |proportion| J[p-chart]\\n    D --> |n = 1| K[x.one + R chart]\\n    D --> |n = 2-10| L[x + R chart]\\n    D --> |n > 10| M[x + S chart]\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n### X-bar chart\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(qcc)\ndata(\"pistonrings\")\nattach(pistonrings)\nqcc_gr <- qcc.groups(diameter, sample)\nhead(qcc_gr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    [,1]   [,2]   [,3]   [,4]   [,5]\n1 74.030 74.002 74.019 73.992 74.008\n2 73.995 73.992 74.001 74.011 74.004\n3 73.988 74.024 74.021 74.005 74.002\n4 74.002 73.996 73.993 74.015 74.009\n5 73.992 74.007 74.015 73.989 74.014\n6 74.009 73.994 73.997 73.985 73.993\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqcc(qcc_gr, type = \"xbar\",std.dev\t\n= \"UWAVE-SD\")\n```\n\n::: {.cell-output-display}\n![](lecture12_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n### Nelson Rules for Control Charts\n\n1.  One point above UCL or below LCL\n\n2.  Two points above/below 2 sigma\n\n3.  Four out of five points above/below 1 sigma\n\n4.  Eight points in a row above/below the center line\n\n5.  Six points in a row ascending or descending (trend)\n\n6.  15 points in a row \"hugging\" the center line (between -1 and +1 sigma)\n\n7.  14 points in a row alternating up and down\n\n8.  Eight points in a row above 1 sigma or below -1 sigma\n\n    [Nelson_rules](https://en.wikipedia.org/wiki/Nelson_rules)\n\n------------------------------------------------------------------------\n\n::: columns\n::: {.column width=\"70%\"}\n::: callout-note\n## Exercise 1\n\nThe quality.csv file contains data about time taken to deliver some products of Western shipping center in Colombo. The manager of the Western shipping center obtained this dataset by randomly selecting 10 samples for 20 days. Using the data, determine whether the delivery process of the company is stable over time.\n:::\n:::\n\n::: {.column width=\"30%\"}\n![](images/dataEx1.PNG){fig-align=\"right\"}\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Create an S chart\n\n-   Use to assess the variability of the process.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqcc(qcc_gr, type = \"S\",std.dev\t\n= \"UWAVE-SD\")\n```\n\n::: {.cell-output-display}\n![](lecture12_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n### Create an R chart\n\n-   Use to assess the variability of the process with small samples.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqcc(qcc_gr, type = \"R\",std.dev\t\n= \"UWAVE-R\")\n```\n\n::: {.cell-output-display}\n![](lecture12_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n::: callout-note\n## Exercise 2\n\nUsing the same dataset considered in Exercise 1, determine whether the variability of the delivery process of the company is stable over time.\n:::\n\n------------------------------------------------------------------------\n\n## Discrete Measurements: p and np Charts\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"orangejuice\")\nhead(orangejuice)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  sample  D size trial\n1      1 12   50  TRUE\n2      2 15   50  TRUE\n3      3  8   50  TRUE\n4      4 10   50  TRUE\n5      5  4   50  TRUE\n6      6  7   50  TRUE\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"orangejuice\")\nqcc(orangejuice$D,\n  orangejuice$size, type = \"p\")\n```\n\n::: {.cell-output-display}\n![](lecture12_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Process capability analysis\n\n-   Measure whether consumer specified upper and lower specification limits (LSL/USL) are compatible with process control limits (LCL/UCL)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(pistonrings)\nattach(pistonrings)\ndiameter <- qcc.groups(diameter, sample)\nq <- qcc(diameter[1:25,], type=\"xbar\", nsigmas=3, plot=FALSE)\nprocess.capability(q, spec.limits=c(73.95,74.05))\n```\n\n::: {.cell-output-display}\n![](lecture12_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nProcess Capability Analysis\n\nCall:\nprocess.capability(object = q, spec.limits = c(73.95, 74.05))\n\nNumber of obs = 125          Target = 74\n       Center = 74              LSL = 73.95\n       StdDev = 0.009785        USL = 74.05\n\nCapability indices:\n\n      Value   2.5%  97.5%\nCp    1.703  1.491  1.915\nCp_l  1.743  1.555  1.932\nCp_u  1.663  1.483  1.844\nCp_k  1.663  1.448  1.878\nCpm   1.691  1.480  1.902\n\nExp<LSL 0%\t Obs<LSL 0%\nExp>USL 0%\t Obs>USL 0%\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture12_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nProcess Capability Analysis\n\nCall:\nprocess.capability(object = q, spec.limits = c(73.97, 74.03),     target = 74.01)\n\nNumber of obs = 125          Target = 74.01\n       Center = 74              LSL = 73.97\n       StdDev = 0.009785        USL = 74.03\n\nCapability indices:\n\n       Value    2.5%   97.5%\nCp    1.0220  0.8948  1.1489\nCp_l  1.0620  0.9407  1.1833\nCp_u  0.9819  0.8682  1.0956\nCp_k  0.9819  0.8464  1.1174\nCpm   0.7589  0.6458  0.8719\n\nExp<LSL 0.072%\t Obs<LSL 0.8%\nExp>USL 0.16%\t Obs>USL 0%\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n### Cp and Cpk Indices\n\n-   Cp (Process Capability Ratio): measure related to the spread of a process.\n\n-   Cpk (Process Capability Index): measure related to the centerness of a process.\n\n-   Centered processes are analyzed based on their Cp ratio while non-centered processes are analyzed based on their Cpk index.\n\n::: callout-note\n## Exercise 3\n\nUsing the data in quality.csv, perform a capability analysis to determine whether the delivery process is within specification limits (LSL=1.5,USL=5) and produces acceptable delivery times.\n:::\n\n# Some Useful Links ...\n\n-   <https://www.youtube.com/watch?v=mLvizyDFLQ4/>\n\n-   <https://www.youtube.com/watch?v=Wi4UU66jf4s/>\n\n-   <https://www.datisticsblog.com/2021/08/qcwithr/>\n\n-   <https://www.coursera.org/lecture/six-sigma-define-measure-advanced/analyzing-process-capability-qatUU/>\n\n-   <http://rcontrolcharts.com/>\n",
    "supporting": [
      "lecture12_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<script src=\"../../../site_libs/d3-3.3.8/d3.min.js\"></script>\r\n<script src=\"../../../site_libs/dagre-0.4.0/dagre-d3.min.js\"></script>\r\n<link href=\"../../../site_libs/mermaid-0.3.0/dist/mermaid.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../site_libs/mermaid-0.3.0/dist/mermaid.slim.min.js\"></script>\r\n<link href=\"../../../site_libs/DiagrammeR-styles-0.2/styles.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../site_libs/chromatography-0.1/chromatography.js\"></script>\r\n<script src=\"../../../site_libs/DiagrammeR-binding-1.0.9/DiagrammeR.js\"></script>\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
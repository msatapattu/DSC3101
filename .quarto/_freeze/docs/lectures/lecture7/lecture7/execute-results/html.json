{
  "hash": "a5a9b54152e35728eff749cd027ce608",
  "result": {
    "markdown": "---\ntitle: DSC 3091- Advanced Statistics Applications I\nsubtitle: \"Categorical Data Analysis\"\n#author: Dr Jagath Senarathne\n#institute: Department of Statistics and Computer Science \nformat: \n  revealjs:\n      large: true\n      theme: [beige, custom.scss]\n      slide-number: true\n      chalkboard: \n        theme: whiteboard\n      \neditor: visual\n---\n\n\n# Types of Data\n\nData is generally divided into two categories:\n\n-   **Quantitative data** represents amounts.\n\n-   **Categorical data** represents groupings.\n\nA variable that contains quantitative data is a **quantitative variable**; a variable that contains categorical data is a **categorical variable**.\n\n# Types of Data\n\n**Quantitative variables**\n\nThe quantitative data represent real amounts that can be added, subtracted, divided, etc. There are two types of quantitative variables:\n\n-   **Discrete** (**integer)**: Counts of individual items or values.\n\n    Examples: Number of students in a class, Number of different tree species in a forest\n\n-   **Continuous** variables: Measurements of continuous or non-finite values.\n\n    Examples: Distance, Volume, Temperature\n\n# **Categorical variables**\n\nThere are three types of categorical variables:\n\n-   **binary (dichotomous)** variables: Two outcomes (Yes/no) Examples: Heads/tails in a coin flip, Gender\n\n-   **nominal** variables: Groups with no rank or order between them.\n\n    Examples: Hair colour, Nationality\n\n-   **ordinal** variables: Groups that are ranked in a specific order. Examples: Rating scale, responses in a survey\n\n# Summarizing Categorical data\n\n-   Probability distributions for categorical data:\n\n    -   Binomial distribution\n\n    -   Multinomial distribution\n\n**Example 1**\n\nLet us consider the `knee` dataset in `catdata` R package\n\nIn a clinical study n=127 patients with sport related injuries have been treated with two different therapies (chosen by random design) with 8 variables. After 3,7 and 10 days of treatment the pain occurring during knee movement was observed.\n\n# Summarizing Categorical data\n\n| Variable | Description                                          |\n|----------|------------------------------------------------------|\n| N        | Patient's number                                     |\n| Th       | Therapy ( placebo = 1, treatment = 2)                |\n| Age      | Age in years                                         |\n| Sex      | Gender (male = 0, female = 1)                        |\n| R1       | Pain before treatment (no pain = 1, severe pain = 5) |\n| R2       | Pain after three days of treatment                   |\n| R3       | Pain after seven days of treatment                   |\n| R4       | Pain after ten days of treatment                     |\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(catdata)\ndata(knee)\nhead(knee)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  N Th Age Sex R1 R2 R3 R4\n1 1  1  28   1  4  4  4  4\n2 2  1  32   1  4  4  4  4\n3 3  1  41   1  3  3  3  3\n4 4  2  21   1  4  3  3  2\n5 5  2  34   1  4  3  3  2\n6 6  1  24   1  3  3  3  2\n```\n:::\n:::\n\n\n-   Check the structure of the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(knee)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t127 obs. of  8 variables:\n $ N  : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Th : int  1 1 1 2 2 1 2 2 2 1 ...\n $ Age: int  28 32 41 21 34 24 28 40 24 39 ...\n $ Sex: num  1 1 1 1 1 1 1 1 0 0 ...\n $ R1 : int  4 4 3 4 4 3 4 3 4 4 ...\n $ R2 : int  4 4 3 3 3 3 3 2 4 4 ...\n $ R3 : int  4 4 3 3 3 3 3 2 4 4 ...\n $ R4 : int  4 4 3 2 2 2 2 2 3 3 ...\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n-   Convert into factor variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknee$Th <- as.factor(knee$Th)\nknee$Sex <- as.factor(knee$Sex)\nstr(knee)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t127 obs. of  8 variables:\n $ N  : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Th : Factor w/ 2 levels \"1\",\"2\": 1 1 1 2 2 1 2 2 2 1 ...\n $ Age: int  28 32 41 21 34 24 28 40 24 39 ...\n $ Sex: Factor w/ 2 levels \"0\",\"1\": 2 2 2 2 2 2 2 2 1 1 ...\n $ R1 : int  4 4 3 4 4 3 4 3 4 4 ...\n $ R2 : int  4 4 3 3 3 3 3 2 4 4 ...\n $ R3 : int  4 4 3 3 3 3 3 2 4 4 ...\n $ R4 : int  4 4 3 2 2 2 2 2 3 3 ...\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n-   Changing factor levels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(knee$Th) <- c(\"Placebo\",\"Treatment\") \nlevels(knee$Sex) <-c(\"Male\",\"Female\")\nhead(knee)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  N        Th Age    Sex R1 R2 R3 R4\n1 1   Placebo  28 Female  4  4  4  4\n2 2   Placebo  32 Female  4  4  4  4\n3 3   Placebo  41 Female  3  3  3  3\n4 4 Treatment  21 Female  4  3  3  2\n5 5 Treatment  34 Female  4  3  3  2\n6 6   Placebo  24 Female  3  3  3  2\n```\n:::\n:::\n\n\n# Categorical data visualization\n\nThe distribution of a single categorical variable is typically plotted with a **bar chart**, a **pie chart**, or a **tree map**. We can draw bar charts for counts or percentages, and each bar represents a categorical variable.\n\nUse a pie charts if you want to compare each category with the whole, and the number of categories is small.\n\nAn alternative to a pie chart is a tree map. Unlike pie charts, it can handle categorical variables that have many levels.\n\n# Categorical data visualization\n\nWhen plotting the relationship between two categorical variables, **stacked**, **grouped**, or **segmented bar charts** are typically used. A less common approach is the **mosaic chart**.\n\nRefer here: https://rkabacoff.github.io/datavis/Bivariate.html\n\n# Group Bar Chart\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(knee, aes(x = R2, fill = Th)) + geom_bar(position = \"dodge\") +\n  labs(x = \"Pain after trteatment\", \n       y = \"Number of patients\", \n       fill = \"Treatment\")\n```\n\n::: {.cell-output-display}\n![](lecture7_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n# Stack Bar Chart\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(knee, \n       aes(x = R2, \n           fill = Th)) + \n  geom_bar(position = \"stack\")+\n  scale_fill_discrete(labels = c(\"placebo\", \"treatment\"))\n```\n\n::: {.cell-output-display}\n![](lecture7_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n# Mosaic plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl <- xtabs(~Th +Sex+R1, knee)\nftable(tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 R1  1  2  3  4  5\nTh        Sex                     \nPlacebo   Male       5  1  1  4  6\n          Female     5  1 16 18  6\nTreatment Male       8  1  1  5  6\n          Female     6  1  9 20  7\n```\n:::\n\n```{.r .cell-code}\nlibrary(vcd)\nmosaic(tbl, main = \"Pain before treatment\", shade = TRUE, legend = TRUE)\n```\n\n::: {.cell-output-display}\n![](lecture7_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n# Creating tabulated summaries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nT1=table(knee$Th)#Selecting only the Th variable\nT1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  Placebo Treatment \n       63        64 \n```\n:::\n\n```{.r .cell-code}\nprop.table(T1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  Placebo Treatment \n 0.496063  0.503937 \n```\n:::\n\n```{.r .cell-code}\nT2=table(knee$Th,knee$Sex)#Selecting both Th and Sex variables\nT2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           \n            Male Female\n  Placebo     17     46\n  Treatment   21     43\n```\n:::\n\n```{.r .cell-code}\nprop.table(T2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           \n                 Male    Female\n  Placebo   0.1338583 0.3622047\n  Treatment 0.1653543 0.3385827\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n-   Using `CrossTable` function in `gmodels` package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gmodels)\nCrossTable(table(knee$Th,knee$Sex))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n \n   Cell Contents\n|-------------------------|\n|                       N |\n| Chi-square contribution |\n|           N / Row Total |\n|           N / Col Total |\n|         N / Table Total |\n|-------------------------|\n\n \nTotal Observations in Table:  127 \n\n \n             |  \n             |      Male |    Female | Row Total | \n-------------|-----------|-----------|-----------|\n     Placebo |        17 |        46 |        63 | \n             |     0.182 |     0.078 |           | \n             |     0.270 |     0.730 |     0.496 | \n             |     0.447 |     0.517 |           | \n             |     0.134 |     0.362 |           | \n-------------|-----------|-----------|-----------|\n   Treatment |        21 |        43 |        64 | \n             |     0.179 |     0.076 |           | \n             |     0.328 |     0.672 |     0.504 | \n             |     0.553 |     0.483 |           | \n             |     0.165 |     0.339 |           | \n-------------|-----------|-----------|-----------|\nColumn Total |        38 |        89 |       127 | \n             |     0.299 |     0.701 |           | \n-------------|-----------|-----------|-----------|\n\n \n```\n:::\n:::\n\n\n# Chi-square goodness of fit test\n\n-   A statistical hypothesis test used to determine whether a variable is likely to come from a specified distribution or not.\n\n-   In Knee injuries dataset, let's check whether the patients were randomly allocated to the treatment and placebo groups.\n\n    -   Null hypothesis: $P_{trt}=P_{plc}=0.5$\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprobabilities <- c(Treatment = .5, Placebo = .5) \nprobabilities\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTreatment   Placebo \n      0.5       0.5 \n```\n:::\n\n```{.r .cell-code}\nlibrary(lsr)\ngoodnessOfFitTest(x=knee$Th) # No need to input probabilities if they are equal\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n     Chi-square test against specified probabilities\n\nData variable:   knee$Th \n\nHypotheses: \n   null:        true probabilities are as specified\n   alternative: true probabilities differ from those specified\n\nDescriptives: \n          observed freq. expected freq. specified prob.\nPlacebo               63           63.5             0.5\nTreatment             64           63.5             0.5\n\nTest results: \n   X-squared statistic:  0.008 \n   degrees of freedom:  1 \n   p-value:  0.929 \n```\n:::\n:::\n\n\n# Chi-square test of Independence\n\n-   A hypothesis test used to determine whether two categorical or nominal variables are likely to be related or not.\n\n-   In Knee injuries dataset, let's check whether the variables Th and R2 are independent or not.\n\n-   First, we convert R2 to a factor variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknee$R1=as.factor(knee$R1)\nknee$R2=as.factor(knee$R2)\n```\n:::\n\n\n# Chi-square test of Independence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lsr)\nassociationTest( formula = ~Th+R2, data = knee )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n     Chi-square test of categorical association\n\nVariables:   Th, R2 \n\nHypotheses: \n   null:        variables are independent of one another\n   alternative: some contingency exists between variables\n\nObserved contingency table:\n           R2\nTh           1  2  3  4  5\n  Placebo   13  3 18 22  7\n  Treatment 14  6 23 17  4\n\nExpected contingency table under the null hypothesis:\n           R2\nTh             1    2    3    4    5\n  Placebo   13.4 4.46 20.3 19.3 5.46\n  Treatment 13.6 4.54 20.7 19.7 5.54\n\nTest results: \n   X-squared statistic:  3.098 \n   degrees of freedom:  4 \n   p-value:  0.542 \n\nOther information: \n   estimated effect size (Cramer's v):  0.156 \n   warning: expected frequencies too small, results may be inaccurate\n```\n:::\n:::\n\n\n## Another way to do chi-square tests in R\n\n-   goodness of fit\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchisq.test(x=table(knee$Th))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tChi-squared test for given probabilities\n\ndata:  table(knee$Th)\nX-squared = 0.007874, df = 1, p-value = 0.9293\n```\n:::\n:::\n\n\n-   Independence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nT3=table(knee$Th,knee$R2)\nchisq.test(T3)\n```\n:::\n\n\n# Assumptions of chi-square test\n\n-   Expected frequencies are sufficiently large.\n\n    ::: callout-tip\n    ## If this assumption is violated\n\n    If your expected cell counts are too small, check out the Fisher exact test.\n    :::\n\n-   Observations are independent.\n\n    ::: callout-tip\n    ## If observations are not independent\n\n    Use the McNemar test or the Cochran test.\n    :::\n\n# Fisher exact test\n\n-   The Fisher exact test works somewhat differently to the chi-square test (or in fact any of the other hypothesis tests)\n\n-   As can be seen it does not calculate a test statistic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nT3=table(knee$Th,knee$R2)\nfisher.test(T3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tFisher's Exact Test for Count Data\n\ndata:  T3\np-value = 0.5641\nalternative hypothesis: two.sided\n```\n:::\n:::\n\n\n# McNemar test\n\n-   Suppose we want to check whether the two variables R2 and R3 are independent or not.\n\n-   Here, both variables measure the pain of the same set of patients after the treatment.\n\n-   Therefore, these observations can be correlated.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nR2.merge=factor(ifelse(knee$R2==1 | knee$R2==2,1,2))\nR3.merge=ifelse(knee$R3==1 | knee$R3==2,1,2)\nT4=table(R2.merge,R3.merge)\nmcnemar.test(T4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMcNemar's Chi-squared test with continuity correction\n\ndata:  T4\nMcNemar's chi-squared = 9.0909, df = 1, p-value = 0.002569\n```\n:::\n:::\n\n\n# Odds Ratio and 95% CI\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(vcd) # install the package first\nT5 <-table(knee$R4,knee$Th)\nodds.2cb <- oddsratio(T5,log=F) # computes the odds ratio\nsummary(odds.2cb) # summary displays the odds ratio\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nz test of coefficients:\n\n                      Estimate Std. Error z value Pr(>|z|)  \n1:2/Placebo:Treatment  2.90789    1.52468  1.9072  0.05649 .\n2:3/Placebo:Treatment  0.24176    0.13799  1.7520  0.07978 .\n3:4/Placebo:Treatment  0.38182    0.23506  1.6243  0.10430  \n4:5/Placebo:Treatment  1.66667    1.63865  1.0171  0.30911  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nconfint(odds.2cb) # displays the confidence intervals\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                           2.5 %     97.5 %\n1:2/Placebo:Treatment 1.04057283  8.1261509\n2:3/Placebo:Treatment 0.07898152  0.7400092\n3:4/Placebo:Treatment 0.11424274  1.2760997\n4:5/Placebo:Treatment 0.24263538 11.4483623\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n-   Plot the odds ratio and their respective confidence intervals.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(odds.2cb, main = \"Relative Odds of Placebo\", xlab = \"Pain after treatment\", ylab = \"Odds Ratio, 95% CI\")\n```\n\n::: {.cell-output-display}\n![](lecture7_files/figure-revealjs/unnamed-chunk-38-1.png){width=960}\n:::\n:::\n\n\n# Kendall rank correlation\n\n-   Kendall rank correlation is used to test the similarities in the ordering of data.\n\n-   A better alternative to Spearman correlation (non-parametric) when your sample size is small and has many tied ranks.\n\n-   Example: Customer satisfaction (e.g. Very Satisfied, Somewhat Satisfied, Neutral.) and delivery time (\\< 30 Minutes, 30 minutes - 1 Hour, \\>2 Hours)\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres<-cor.test(knee$R3,knee$R4, method=\"kendall\")\nres\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tKendall's rank correlation tau\n\ndata:  knee$R3 and knee$R4\nz = 12.086, p-value < 2.2e-16\nalternative hypothesis: true tau is not equal to 0\nsample estimates:\n      tau \n0.8869367 \n```\n:::\n:::\n\n\n# Some Useful Links ...\n\n-   <https://learningstatisticswithr.com/book/>\n\n-   <https://www.r-bloggers.com/2022/01/handling-categorical-data-in-r-part-1/>\n\n-   <https://www.youtube.com/watch?v=uLcd6tRTUEY>\n\n-   <https://towardsdatascience.com/kendall-rank-correlation-explained-dee01d99c535>\n",
    "supporting": [
      "lecture7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}